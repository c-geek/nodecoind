#!/usr/bin/env node
"use strict";

const logger = require("../app/lib/logger").NewLogger();

// Specific errors handling
process.on('uncaughtException', (err) => {
  // Dunno why this specific exception is not caught
  if (err.code && err.code !== "EADDRNOTAVAIL" && err.code !== "EINVAL" && err.code !== "ENOENT") {
    logger.error(err.stack || err.message || err);
    process.exit(2);
  }
});

(async () => {

  try {
    const duniter = require('../index');
    const stack = duniter.statics.autoStack();
    await stack.executeStack(process.argv);
    // Everything went well, close Duniter quietly.
    process.exit();
  } catch (e) {
    // If an unhandled error occured
    logger.error(e.stack || e.message || e);
    process.exit(1);
  } finally {
    // If we did not succeed to close before, force close with error.
    process.exit(100);
  }
})()
