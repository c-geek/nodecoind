[package]
name = "kv_typed"
version = "0.1.0"
authors = ["elois <c@elo.tf>"]
description = "Strongly typed key-value storage"
repository = "https://git.duniter.org/nodes/typescript/duniter"
keywords = ["database", "key", "sled"]
license = "AGPL-3.0"
edition = "2018"

[lib]
path = "src/lib.rs"

[dependencies]
async-channel = { version = "1.4.2", optional = true }
crossbeam-channel = { version = "0.4.4", optional = true }
kv_typed_code_gen = { path = "../kv_typed_code_gen" }
leveldb_minimal = { version = "0.1.0", optional = true }
mockall = { version = "0.8.0", optional = true }
parking_lot = { version = "0.11.0", optional = true }
rayon = { version = "1.3.1", optional = true }
regex = { version = "1.3.9", optional = true }
serde_json = { version = "1.0.53", optional = true }
sled = { version = "0.34.4", optional = true }
smallvec = { version = "1.4.0", features = ["serde"] }
thiserror = "1.0.20"

[[bench]]
name = "compare_backends"
harness = false
required-features = ["leveldb_backend", "memory_backend", "sled_backend"]

[dev-dependencies]
async-std = { version = "1.6.3", features = ["attributes"] }
maybe-async = "0.2.0"
smallvec = { version = "1.4.0", features = ["serde"] }
unwrap = "1.2.1"

# Benches dependencies
criterion = { version = "0.3.1" }

[features]
#default = ["memory_backend"]

async = ["async-channel"]
explorer = ["rayon", "regex", "serde_json"]
leveldb_backend = ["leveldb_minimal"]
memory_backend = ["parking_lot"]
sled_backend = ["sled"]
subscription = ["parking_lot"]
sync = ["crossbeam-channel"]

mock = ["mockall"]

default = ["memory_backend", "subscription", "sync"]
#default = ["memory_backend", "subscription", "sync", "explorer"]
#default = ["memory_backend", "subscription", "sync", "mock"]
